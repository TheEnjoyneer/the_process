{"ast":null,"code":"import { NgFor } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatchupCardComponent } from '../matchup-card/matchup-card.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/grid-list\";\nfunction CardGridComponent_mat_grid_tile_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 2);\n    i0.ɵɵelement(1, \"app-matchup-card\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tile_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"background\", tile_r1.color);\n    i0.ɵɵproperty(\"colspan\", tile_r1.cols)(\"rowspan\", tile_r1.rows);\n  }\n}\nexport class CardGridComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  ngOnInit() {\n    this.newdata = this.getData();\n    /*for (let i = 0; i < this.newdata.numGames; i++)\r\n    {\r\n          }\r\n    }\r\n        tiles = [\r\n    {text: 'One', cols: 1, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 1, rows: 1, color: 'lightgreen'},\r\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Four', cols: 1, rows: 1, color: '#DDBDF1'},\r\n    ];\r\n        getData() {\r\n    // this.http.get('http://127.0.0.1:5000/topGame').map(response => response.json()).subscribe(data => this.newdata = data);\r\n     this.http.get('http://127.0.0.1:5000/numGames').subscribe(data => {\r\n       console.log(data)\r\n       this.newdata = data;//JSON.stringify(data);\r\n       });\r\n    }\r\n    }\r\n     \r\n    }\r\n    static { this.ɵfac = function CardGridComponent_Factory(t) { return new (t || CardGridComponent)(i0.ɵɵdirectiveInject(i1.HttpClient)); }; }\r\n    static { this.ɵcmp = /*@__PURE__*/\n    i0.ɵɵdefineComponent({\n      type: CardGridComponent,\n      selectors: [[\"app-card-grid\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 1,\n      consts: [[\"cols\", \"1\", \"rowHeight\", \"300px\"], [3, \"colspan\", \"rowspan\", \"background\", 4, \"ngFor\", \"ngForOf\"], [3, \"colspan\", \"rowspan\"]],\n      template: function CardGridComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-grid-list\", 0);\n          i0.ɵɵtemplate(1, CardGridComponent_mat_grid_tile_1_Template, 2, 4, \"mat-grid-tile\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.tiles);\n        }\n      },\n      dependencies: [HttpClientModule, MatchupCardComponent, MatGridListModule, i2.MatGridList, i2.MatGridTile, NgFor],\n      styles: [\"mat-grid-tile[_ngcontent-%COMP%] {\\n    background: lightblue;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FyZC1ncmlkL2NhcmQtZ3JpZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0VBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWdyaWQtdGlsZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaWdodGJsdWU7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["NgFor","HttpClientModule","MatGridListModule","MatchupCardComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵstyleProp","tile_r1","color","ɵɵproperty","cols","rows","CardGridComponent","constructor","http","ngOnInit","newdata","getData","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","CardGridComponent_Template","rf","ctx","ɵɵtemplate","CardGridComponent_mat_grid_tile_1_Template","ɵɵadvance","tiles","i2","MatGridList","MatGridTile","styles"],"sources":["C:\\Users\\Christopher Brant\\CFB_BCRI\\the_process\\BCRI_V2\\angularApp\\src\\app\\card-grid\\card-grid.component.ts","C:\\Users\\Christopher Brant\\CFB_BCRI\\the_process\\BCRI_V2\\angularApp\\src\\app\\card-grid\\card-grid.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgFor } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatchupCardComponent } from '../matchup-card/matchup-card.component'\n\n@Component({\n  selector: 'app-card-grid',\n  standalone: true,\n  imports: [ \n    HttpClientModule,\n    MatchupCardComponent,\n    MatGridListModule, \n    NgFor\n  ],\n  templateUrl: './card-grid.component.html',\n  styleUrls: ['./card-grid.component.css']\n})\nexport class CardGridComponent implements OnInit {\n  newdata:any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n\tthis.newdata = this.getData();\n    /*for (let i = 0; i < this.newdata.numGames; i++)\n    {\n\n    }\n  }\n\n  tiles = [\n    {text: 'One', cols: 1, rows: 1, color: 'lightblue'},\n    {text: 'Two', cols: 1, rows: 1, color: 'lightgreen'},\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\n    {text: 'Four', cols: 1, rows: 1, color: '#DDBDF1'},\n  ];\n\n  getData() {\n    // this.http.get('http://127.0.0.1:5000/topGame').map(response => response.json()).subscribe(data => this.newdata = data);\n     this.http.get('http://127.0.0.1:5000/numGames').subscribe(data => {\n       console.log(data)\n       this.newdata = data;//JSON.stringify(data);\n       });\n   }\n}\n","<mat-grid-list cols=1 rowHeight=\"300px\" >\n    <mat-grid-tile\n        *ngFor=\"let tile of tiles\"\n        [colspan]=\"tile.cols\"\n        [rowspan]=\"tile.rows\"\n        [style.background]=\"tile.color\">\n        <!---<app-matchup-card></app-matchup-card>--->\n        <app-matchup-card></app-matchup-card>\n    </mat-grid-tile>\n</mat-grid-list>\n\n<!---\n<mat-grid-list cols=\"1\" rowHeight=\"4:1\">\n    <mat-grid-tile><app-matchup-card></app-matchup-card></mat-grid-tile>\n    <mat-grid-tile>2</mat-grid-tile>\n    <mat-grid-tile>3</mat-grid-tile>\n    <mat-grid-tile>4</mat-grid-tile>\n</mat-grid-list>\n--->"],"mappings":"AAEA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,oBAAoB,QAAQ,wCAAwC;;;;;;ICJzEC,EAAA,CAAAC,cAAA,uBAIoC;IAEhCD,EAAA,CAAAE,SAAA,uBAAqC;IACzCF,EAAA,CAAAG,YAAA,EAAgB;;;;IAHZH,EAAA,CAAAI,WAAA,eAAAC,OAAA,CAAAC,KAAA,CAA+B;IAF/BN,EAAA,CAAAO,UAAA,YAAAF,OAAA,CAAAG,IAAA,CAAqB,YAAAH,OAAA,CAAAI,IAAA;;;ADgB7B,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CAAA;IACT,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,OAAO,EAAE;IAC1B;;;;;;;;;;;;;;;;;;;;;;;YAPSL,iBAAiB;MAAAM,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAlB,EAAA,CAAAmB,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCnB9BzB,EAAA,CAAAC,cAAA,uBAAyC;UACrCD,EAAA,CAAA2B,UAAA,IAAAC,0CAAA,2BAOgB;UACpB5B,EAAA,CAAAG,YAAA,EAAgB;;;UAPSH,EAAA,CAAA6B,SAAA,GAAQ;UAAR7B,EAAA,CAAAO,UAAA,YAAAmB,GAAA,CAAAI,KAAA,CAAQ;;;qBDS7BjC,gBAAgB,EAChBE,oBAAoB,EACpBD,iBAAiB,EAAAiC,EAAA,CAAAC,WAAA,EAAAD,EAAA,CAAAE,WAAA,EACjBrC,KAAK;MAAAsC,MAAA;IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}