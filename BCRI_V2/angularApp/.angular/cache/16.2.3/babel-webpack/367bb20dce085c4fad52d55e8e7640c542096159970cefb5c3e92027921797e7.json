{"ast":null,"code":"var _class;\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/material/button\";\nexport class MatchupCardComponent {\n  constructor(http) {\n    this.http = http;\n    this.longText = \"Testing here we go bitches\";\n  }\n  ngOnInit() {\n    this.getData();\n  }\n  getData() {\n    // this.http.get('http://127.0.0.1:5000/topGame').map(response => response.json()).subscribe(data => this.newdata = data);\n    this.http.get('http://127.0.0.1:5000/topGame').subscribe(data => {\n      console.log(data);\n      this.newdata = data; //JSON.stringify(data);\n    });\n  }\n}\n_class = MatchupCardComponent;\n_class.ɵfac = function MatchupCardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-matchup-card\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 12,\n  vars: 3,\n  consts: [[1, \"example-card\"], [\"mat-button\", \"\"]],\n  template: function MatchupCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-header\")(2, \"mat-card-title\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"p\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"mat-card-actions\")(10, \"button\", 1);\n      i0.ɵɵtext(11, \"FULL PREVIEW\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.newdata == null ? null : ctx.newdata.matchup);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.newdata == null ? null : ctx.newdata.conferences);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.longText);\n    }\n  },\n  dependencies: [MatCardModule, i2.MatCard, i2.MatCardActions, i2.MatCardContent, i2.MatCardHeader, i2.MatCardSubtitle, i2.MatCardTitle, MatButtonModule, i3.MatButton],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["MatButtonModule","MatCardModule","MatchupCardComponent","constructor","http","longText","ngOnInit","getData","get","subscribe","data","console","log","newdata","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","MatchupCardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","matchup","conferences","i2","MatCard","MatCardActions","MatCardContent","MatCardHeader","MatCardSubtitle","MatCardTitle","i3","MatButton","styles"],"sources":["C:\\Users\\Christopher Brant\\CFB_BCRI\\the_process\\BCRI_V2\\angularApp\\src\\app\\matchup-card\\matchup-card.component.ts","C:\\Users\\Christopher Brant\\CFB_BCRI\\the_process\\BCRI_V2\\angularApp\\src\\app\\matchup-card\\matchup-card.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\n\n@Component({\n  selector: 'app-matchup-card',\n  templateUrl: './matchup-card.component.html',\n  standalone: true,\n  imports: [ MatCardModule, MatButtonModule ],\n  styleUrls: ['./matchup-card.component.css']\n})\nexport class MatchupCardComponent implements OnInit {\n  newdata:any;\n\n  longText = \"Testing here we go bitches\"\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n\tthis.getData();\n  }\n\n  getData() {\n\t // this.http.get('http://127.0.0.1:5000/topGame').map(response => response.json()).subscribe(data => this.newdata = data);\n    this.http.get('http://127.0.0.1:5000/topGame').subscribe(data => {\n      console.log(data)\n      this.newdata = data;//JSON.stringify(data);\n      });\n  }\n}\n","<mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>{{newdata?.matchup}}</mat-card-title>\n      <mat-card-subtitle>{{newdata?.conferences}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p>{{longText}}</p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button>FULL PREVIEW</button>\n    </mat-card-actions>\n  </mat-card>\n"],"mappings":";AACA,SAAQA,eAAe,QAAO,0BAA0B;AACxD,SAAQC,aAAa,QAAO,wBAAwB;;;;;AAWpD,OAAM,MAAOC,oBAAoB;EAK/BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,QAAQ,GAAG,4BAA4B;EAEC;EAExCC,QAAQA,CAAA;IACT,IAAI,CAACC,OAAO,EAAE;EACb;EAEAA,OAAOA,CAAA;IACP;IACE,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,+BAA+B,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MAC9DC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACG,OAAO,GAAGH,IAAI,CAAC;IACpB,CAAC,CAAC;EACN;;SAjBWR,oBAAoB;;mBAApBA,MAAoB,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;QAApBf,MAAoB;EAAAgB,SAAA;EAAAC,UAAA;EAAAC,QAAA,GAAAN,EAAA,CAAAO,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCbjCb,EAAA,CAAAe,cAAA,kBAA+B;MAETf,EAAA,CAAAgB,MAAA,GAAoB;MAAAhB,EAAA,CAAAiB,YAAA,EAAiB;MACrDjB,EAAA,CAAAe,cAAA,wBAAmB;MAAAf,EAAA,CAAAgB,MAAA,GAAwB;MAAAhB,EAAA,CAAAiB,YAAA,EAAoB;MAEjEjB,EAAA,CAAAe,cAAA,uBAAkB;MACXf,EAAA,CAAAgB,MAAA,GAAY;MAAAhB,EAAA,CAAAiB,YAAA,EAAI;MAEvBjB,EAAA,CAAAe,cAAA,uBAAkB;MACGf,EAAA,CAAAgB,MAAA,oBAAY;MAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;MAPxBjB,EAAA,CAAAkB,SAAA,GAAoB;MAApBlB,EAAA,CAAAmB,iBAAA,CAAAL,GAAA,CAAAf,OAAA,kBAAAe,GAAA,CAAAf,OAAA,CAAAqB,OAAA,CAAoB;MACjBpB,EAAA,CAAAkB,SAAA,GAAwB;MAAxBlB,EAAA,CAAAmB,iBAAA,CAAAL,GAAA,CAAAf,OAAA,kBAAAe,GAAA,CAAAf,OAAA,CAAAsB,WAAA,CAAwB;MAGtCrB,EAAA,CAAAkB,SAAA,GAAY;MAAZlB,EAAA,CAAAmB,iBAAA,CAAAL,GAAA,CAAAvB,QAAA,CAAY;;;iBDIVJ,aAAa,EAAAmC,EAAA,CAAAC,OAAA,EAAAD,EAAA,CAAAE,cAAA,EAAAF,EAAA,CAAAG,cAAA,EAAAH,EAAA,CAAAI,aAAA,EAAAJ,EAAA,CAAAK,eAAA,EAAAL,EAAA,CAAAM,YAAA,EAAE1C,eAAe,EAAA2C,EAAA,CAAAC,SAAA;EAAAC,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}