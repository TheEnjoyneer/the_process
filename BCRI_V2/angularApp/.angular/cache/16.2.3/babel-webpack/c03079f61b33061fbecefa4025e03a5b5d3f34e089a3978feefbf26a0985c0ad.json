{"ast":null,"code":"var _class;\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatchupCardComponent } from '../matchup-card/matchup-card.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/grid-list\";\nexport class CardGridComponent {\n  constructor() {\n    this.numGames = 6;\n    this.tiles = [{\n      text: 'One',\n      cols: 3,\n      rows: 1,\n      color: 'lightblue'\n    }, {\n      text: 'Two',\n      cols: 1,\n      rows: 2,\n      color: 'lightgreen'\n    }, {\n      text: 'Three',\n      cols: 1,\n      rows: 1,\n      color: 'lightpink'\n    }, {\n      text: 'Four',\n      cols: 2,\n      rows: 1,\n      color: '#DDBDF1'\n    }];\n  }\n}\n_class = CardGridComponent;\n_class.ɵfac = function CardGridComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-card-grid\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[\"rowHeight\", \"1:1\", 3, \"cols\"]],\n  template: function CardGridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-grid-list\", 0)(1, \"mat-grid-tile\");\n      i0.ɵɵelement(2, \"app-matchup-card\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵpropertyInterpolate(\"cols\", ctx.numGames);\n    }\n  },\n  dependencies: [HttpClientModule, MatchupCardComponent, MatGridListModule, i1.MatGridList, i1.MatGridTile],\n  styles: [\"mat-grid-tile[_ngcontent-%COMP%] {\\n    background: lightblue;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FyZC1ncmlkL2NhcmQtZ3JpZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0VBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWdyaWQtdGlsZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaWdodGJsdWU7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["HttpClientModule","MatGridListModule","MatchupCardComponent","CardGridComponent","constructor","numGames","tiles","text","cols","rows","color","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","CardGridComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵpropertyInterpolate","i1","MatGridList","MatGridTile","styles"],"sources":["C:\\Users\\Christopher Brant\\CFB_BCRI\\the_process\\BCRI_V2\\angularApp\\src\\app\\card-grid\\card-grid.component.ts","C:\\Users\\Christopher Brant\\CFB_BCRI\\the_process\\BCRI_V2\\angularApp\\src\\app\\card-grid\\card-grid.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgFor } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatchupCardComponent } from '../matchup-card/matchup-card.component'\n\n@Component({\n  selector: 'app-card-grid',\n  standalone: true,\n  imports: [ \n    HttpClientModule,\n    MatchupCardComponent,\n    MatGridListModule, \n    NgFor\n  ],\n  templateUrl: './card-grid.component.html',\n  styleUrls: ['./card-grid.component.css']\n})\nexport class CardGridComponent {\n  numGames = 6;\n  tiles = [\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\n  ];\n}\n","<mat-grid-list cols={{numGames}} rowHeight=1:1>\n    <mat-grid-tile>\n        <app-matchup-card></app-matchup-card>\n    </mat-grid-tile>\n</mat-grid-list>\n\n<!---\n<mat-grid-list cols=\"1\" rowHeight=\"4:1\">\n    <mat-grid-tile><app-matchup-card></app-matchup-card></mat-grid-tile>\n    <mat-grid-tile>2</mat-grid-tile>\n    <mat-grid-tile>3</mat-grid-tile>\n    <mat-grid-tile>4</mat-grid-tile>\n</mat-grid-list>\n--->"],"mappings":";AAGA,SAASA,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,oBAAoB,QAAQ,wCAAwC;;;AAc7E,OAAM,MAAOC,iBAAiB;EAZ9BC,YAAA;IAaE,KAAAC,QAAQ,GAAG,CAAC;IACZ,KAAAC,KAAK,GAAG,CACN;MAACC,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAW,CAAC,EACnD;MAACH,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAY,CAAC,EACpD;MAACH,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAW,CAAC,EACrD;MAACH,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CACnD;;;SAPUP,iBAAiB;;mBAAjBA,MAAiB;AAAA;;QAAjBA,MAAiB;EAAAQ,SAAA;EAAAC,UAAA;EAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCnB9BP,EAAA,CAAAS,cAAA,uBAA+C;MAEvCT,EAAA,CAAAU,SAAA,uBAAqC;MACzCV,EAAA,CAAAW,YAAA,EAAgB;;;MAHLX,EAAA,CAAAY,qBAAA,SAAAJ,GAAA,CAAAjB,QAAA,CAAiB;;;iBDW5BL,gBAAgB,EAChBE,oBAAoB,EACpBD,iBAAiB,EAAA0B,EAAA,CAAAC,WAAA,EAAAD,EAAA,CAAAE,WAAA;EAAAC,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}